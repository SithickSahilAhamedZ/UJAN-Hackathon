
import React, { createContext, useState, useContext, ReactNode } from 'react';

const translations = {
  en: {
    home: 'Home',
    navigation: 'Navigation',
    booking: 'Booking',
    emergency: 'Emergency',
    report: 'Report',
    gallery: 'Gallery',
    settings: 'Settings',
    about: 'About',
    analytics: 'Analytics',
    admin: 'Admin',
    logout: 'Logout',
    language: 'Language',
    welcomePilgrim: 'Welcome, Pilgrim!',
    dashboardTitle: 'Your guide to a safe & blessed Simhastha.',
    todaysHighlights: "Today's Highlights",
    mainEvent: 'Main Event: Shahi Snan',
    eveningAarti: 'Evening Aarti at Ram Ghat - 7:00 PM',
    weather: 'Weather: Sunny',
    weatherInfo: '28°C, clear skies. Stay hydrated.',
    dailyNeeds: 'Daily Needs',
    spiritualSafety: 'Spiritual & Safety',
    ride: 'Ride',
    stay: 'Stay',
    food: 'Food',
    water: 'Water',
    holySite: 'Holy Site',
    doctor: 'Doctor',
    needHelp: 'Need Help?',
    askAIAssistant: 'Ask our AI assistant for guidance.',
    startChat: 'Start Chat',
    navigationTitle: 'Navigation & Maps',
    routePlanning: 'Route Planning',
    startDestination: 'Start Destination',
    endDestination: 'End Destination',
    chooseYourRoute: 'Choose Your Route',
    aiRecommended: 'AI Recommended',
    shortestPath: 'Shortest Path',
    aiRoutesNotAvailable: 'AI routes are only available from your current location.',
    findRoute: 'Find Direct Route',
    directPath: 'Direct Path',
    directPathDesc: 'Direct route from {start} to {end}.',
    crowdLevels: 'Live Crowd Levels',
    live: 'Live',
    low: 'Low',
    medium: 'Medium',
    high: 'High',
    critical: 'Critical',
    nearbyAmenities: 'Nearby Amenities',
    distanceAway: '{distance}m away',
    waterStation: 'Water Station',
    foodStall: 'Food Stall',
    policeStationAmenity: 'Police Station',
    ambulanceAmenity: 'Ambulance',
    bookingCentre: 'Booking Centre',
    transport: 'Transport',
    vehiclesAvailable: 'Vehicles Available',
    optionsFound: '{count} options found',
    sortBy: 'Sort by:',
    rating: 'Rating',
    priceLowHigh: 'Price: Low-High',
    priceHighLow: 'Price: High-Low',
    perPerson: '/person',
    bookNow: 'Book Now',
    accommodationAvailable: 'Accommodation Available',
    perNight: '/night',
    filters: 'Filters',
    departureDateTime: 'Departure Date & Time',
    busType: 'Bus Type',
    ac: 'AC',
    nonAc: 'Non-AC',
    sleeper: 'Sleeper',
    amenities: 'Amenities',
    wifi: 'Wi-Fi',
    chargingPort: 'Charging Port',
    waterBottle: 'Water Bottle',
    priceRange: 'Price Range',
    checkIn: 'Check-in',
    checkOut: 'Check-out',
    propertyType: 'Property Type',
    hotel: 'Hotel',
    dormitory: 'Dormitory',
    guestRating: 'Guest Rating',
    any: 'Any',
    excellent4_5: 'Excellent: 4.5+',
    veryGood4: 'Very Good: 4+',
    roomService: 'Room Service',
    templeView: 'Temple View',
    applyFilters: 'Apply Filters',
    confirmBooking: 'Confirm Your Booking',
    cancel: 'Cancel',
    confirmAndPay: 'Confirm & Pay',
    bookingConfirmed: 'Booking Confirmed!',
    bookingSuccessMessage: 'Your booking for {itemName} has been successful.',
    done: 'Done',
    date: 'Date:',
    time: 'Time:',
    fromTo: 'From/To:',
    location: 'Location:',
    total: 'Total',
    emergencyServices: 'Emergency Services',
    sos: 'SOS',
    sosHelpText: 'Tap to alert authorities',
    emergencyContacts: 'Emergency Contacts',
    police: 'Police',
    ambulance: 'Ambulance',
    fireBrigade: 'Fire Brigade',
    disasterManagement: 'Disaster Mgmt',
    womensHelpline: "Women's Helpline",
    childHelpline: 'Child Helpline',
    call: 'Call',
    emergencyAssist: 'Emergency Assist',
    accident: 'Report Accident',
    accidentDesc: 'Traffic or other incidents',
    medical: 'Medical Help',
    medicalDesc: 'Request immediate medical aid',
    lostAndFound: 'Lost & Found',
    lostAndFoundDesc: 'Report a lost person or item',
    theftHarassment: 'Theft / Harassment',
    theftHarassmentDesc: 'Report any criminal activity',
    issue: 'Other Issue',
    issueDesc: 'Report any other problem',
    liveLocationSharing: 'Live Location Sharing',
    currentLocation: 'Ujjain, Near Mahakal Temple',
    active: 'Active',
    locationSharingDisabled: 'Location sharing is disabled for privacy. Enable to share with authorities in an emergency.',
    shareLocation: 'Share My Location',
    activeAlerts: 'Active Alerts',
    lostPerson: 'Lost Person Alert: Child, 8 years old',
    team: 'Team:',
    minsAgo: '{count} mins ago',
    recentAlerts: 'Recent Alerts (Resolved)',
    medicalEmergency: 'Medical Emergency near Ram Ghat',
    resolved: 'Resolved',
    trafficAccident: 'Traffic Accident on bridge',
    hoursAgo: '{count}h ago',
    incidentReport: 'Incident Report',
    yourRole: 'What is your role?',
    visitor: 'Visitor',
    visitorDesc: 'General visitor',
    security: 'Security',
    securityDesc: 'Security personnel',
    volunteer: 'Volunteer',
    volunteerDesc: 'Event volunteer',
    medicalStaff: 'Medical Staff',
    medicalStaffDesc: 'Medical staff',
    vendor: 'Vendor',
    vendorDesc: 'Vendor/Staff',
    issueType: 'Type of Issue',
    priorityLevel: 'Priority Level',
    reportDetails: 'Report Details',
    locationPlaceholder: 'Describe the location...',
    descriptionPlaceholder: 'Describe the incident...',
    chars: 'chars',
    attachPhoto: 'Attach Photo (Optional)',
    clickToUpload: 'Click to upload or drag and drop',
    fileTypes: 'SVG, PNG, JPG or GIF',
    submitReport: 'Submit Report',
    headerSearchPlaceholder: 'Search for places, services...',
    voiceSearch: 'Voice Search',
    toggleNotifications: 'Toggle Notifications',
    closeNotification: 'Close',
    settingsTitle: 'Settings',
    generalSettings: 'General Settings',
    theme: 'Theme',
    light: 'Light',
    dark: 'Dark',
    system: 'System',
    notificationSettings: 'Notification Settings',
    crowdAlerts: 'Crowd Alerts',
    bookingConfirmations: 'Booking Confirmations',
    emergencyUpdates: 'Emergency Updates',
    accountSettings: 'Account',
    loggedInAs: 'Logged in as',
    pilgrim: 'Pilgrim',
    editProfile: 'Edit Profile',
    changePassword: 'Change Password',
    aboutTitle: 'About Ujjain360',
    ourMission: 'Our Mission',
    ourMissionDesc: 'To provide a safe, seamless, and spiritually enriching experience for every pilgrim visiting the Ujjain Simhastha, using technology to bridge the gap between devotion and convenience.',
    ourTech: 'Our Technology',
    ourTechDesc1: 'Ujjain360 is built on a modern tech stack designed for scalability and real-time performance. We leverage live data feeds for crowd management, GPS for navigation, and a secure backend for bookings and reports.',
    ourTechDesc2: 'Our core features are powered by Google\'s Gemini AI to provide intelligent route recommendations and a helpful conversational assistant, ensuring you have the best information right at your fingertips.',
    theApp: 'The App',
    theAppDesc: 'This application is your all-in-one digital companion for the Simhastha.',
    keyFeatures: 'Key Features',
    featureNav: 'Real-time Navigation & Crowd Info',
    featureBooking: 'Hassle-free Transport & Stay Booking',
    featureEmergency: 'Instant SOS & Emergency Services',
    meetTheTeam: 'Meet the Team',
    teamMember1Name: 'Aarav Sharma',
    teamMember1Role: 'Project Lead',
    teamMember2Name: 'Priya Verma',
    teamMember2Role: 'UX/UI Designer',
    teamMember3Name: 'Rohan Gupta',
    teamMember3Role: 'Lead Developer',
    galleryTitle: 'Gallery',
    galleryModalTitle: 'Image Preview',
    userLogin: 'User Login',
    adminLogin: 'Admin Login',
    loginPrompt: 'Login to your {type} account',
    user: 'User',
    emailAddress: 'Email Address',
    password: 'Password',
    forgotPassword: 'Forgot Password?',
    login: 'Login',
    noAccountPrompt: "Don't have an account?",
    signUp: 'Sign Up',
    assistantTitle: 'AI Assistant',
    listening: 'Listening...',
    typeYourMessage: 'Type your message...',
    languageLabel: 'Language:',
    aiRecommendedRouteName: 'AI Recommended Route',
    aiRecommendedRouteDesc: 'Safest & most convenient route from {start} to {end}, avoiding high-traffic zones.',
    shortestPathRouteName: 'Shortest Path',
    shortestPathRouteDesc: 'Most direct walking route from {start} to {end}.',
    saferPathDesc: 'A slightly longer but safer route to {end}, avoiding narrow paths.',
    markerTypeUser: 'Your Location',
    markerTypeTemple: 'Temple',
    markerTypeGhat: 'Ghat',
    markerTypePolice: 'Police',
    markerTypeAmbulance: 'Ambulance',
    markerTypeAmenity: 'Amenity',
    crowdLevelPopup: 'Crowd Level: {level}',
  },
  hi: {
    home: 'होम',
    navigation: 'नेविगेशन',
    booking: 'बुकिंग',
    emergency: 'आपातकाल',
    report: 'रिपोर्ट',
    gallery: 'गैलरी',
    settings: 'सेटिंग्स',
    about: 'हमारे बारे में',
    analytics: 'एनालिटिक्स',
    admin: 'एडमिन',
    logout: 'लॉग आउट',
    language: 'भाषा',
    welcomePilgrim: 'आपका स्वागत है, तीर्थयात्री!',
    dashboardTitle: 'एक सुरक्षित और धन्य सिंहस्थ के लिए आपका मार्गदर्शक।',
    todaysHighlights: 'आज की मुख्य बातें',
    mainEvent: 'मुख्य कार्यक्रम: शाही स्नान',
    eveningAarti: 'राम घाट पर शाम की आरती - शाम 7:00 बजे',
    weather: 'मौसम: धूप',
    weatherInfo: '28°C, साफ आसमान। हाइड्रेटेड रहें।',
    dailyNeeds: 'दैनिक आवश्यकताएं',
    spiritualSafety: 'आध्यात्मिक और सुरक्षा',
    ride: 'सवारी',
    stay: 'रहना',
    food: 'भोजन',
    water: 'पानी',
    holySite: 'पवित्र स्थल',
    doctor: 'डॉक्टर',
    needHelp: 'मदद चाहिए?',
    askAIAssistant: 'मार्गदर्शन के लिए हमारे AI सहायक से पूछें।',
    startChat: 'चैट शुरू करें',
    navigationTitle: 'नेविगेशन और मानचित्र',
    routePlanning: 'मार्ग योजना',
    startDestination: 'प्रारंभ गंतव्य',
    endDestination: 'अंतिम गंतव्य',
    chooseYourRoute: 'अपना मार्ग चुनें',
    aiRecommended: 'AI अनुशंसित',
    shortestPath: 'सबसे छोटा रास्ता',
    aiRoutesNotAvailable: 'AI मार्ग केवल आपके वर्तमान स्थान से उपलब्ध हैं।',
    findRoute: 'सीधा मार्ग खोजें',
    directPath: 'सीधा मार्ग',
    directPathDesc: '{start} से {end} तक का सीधा मार्ग।',
    crowdLevels: 'लाइव भीड़ स्तर',
    live: 'लाइव',
    low: 'कम',
    medium: 'मध्यम',
    high: 'अधिक',
    critical: 'गंभीर',
    nearbyAmenities: 'आस-पास की सुविधाएं',
    distanceAway: '{distance}m दूर',
    waterStation: 'जल स्टेशन',
    foodStall: 'भोजन स्टाल',
    policeStationAmenity: 'पुलिस स्टेशन',
    ambulanceAmenity: 'एम्बुलेंस',
    bookingCentre: 'बुकिंग केंद्र',
    transport: 'परिवहन',
    vehiclesAvailable: 'उपलब्ध वाहन',
    optionsFound: '{count} विकल्प मिले',
    sortBy: 'क्रमबद्ध करें:',
    rating: 'रेटिंग',
    priceLowHigh: 'कीमत: कम-अधिक',
    priceHighLow: 'कीमत: अधिक-कम',
    perPerson: '/व्यक्ति',
    bookNow: 'अभी बुक करें',
    accommodationAvailable: 'उपलब्ध आवास',
    perNight: '/रात',
    filters: 'फ़िल्टर',
    departureDateTime: 'प्रस्थान तिथि और समय',
    busType: 'बस का प्रकार',
    ac: 'एसी',
    nonAc: 'गैर-एसी',
    sleeper: 'स्लीपर',
    amenities: 'सुविधाएं',
    wifi: 'वाई-फाई',
    chargingPort: 'चार्जिंग पोर्ट',
    waterBottle: 'पानी की बोतल',
    priceRange: 'मूल्य सीमा',
    checkIn: 'चेक-इन',
    checkOut: 'चेक-आउट',
    propertyType: 'संपत्ति का प्रकार',
    hotel: 'होटल',
    dormitory: 'छात्रावास',
    guestRating: 'अतिथि रेटिंग',
    any: 'कोई भी',
    excellent4_5: 'उत्कृष्ट: 4.5+',
    veryGood4: 'बहुत अच्छा: 4+',
    roomService: 'कक्ष सेवा',
    templeView: 'मंदिर का दृश्य',
    applyFilters: 'फ़िल्टर लागू करें',
    confirmBooking: 'अपनी बुकिंग की पुष्टि करें',
    cancel: 'रद्द करें',
    confirmAndPay: 'पुष्टि करें और भुगतान करें',
    bookingConfirmed: 'बुकिंग की पुष्टि हो गई!',
    bookingSuccessMessage: '{itemName} के लिए आपकी बुकिंग सफल रही है।',
    done: 'पूर्ण',
    date: 'दिनांक:',
    time: 'समय:',
    fromTo: 'से/तक:',
    location: 'स्थान:',
    total: 'कुल',
    emergencyServices: 'आपातकालीन सेवाएं',
    sos: 'SOS',
    sosHelpText: 'अधिकारियों को सचेत करने के लिए टैप करें',
    emergencyContacts: 'आपातकालीन संपर्क',
    police: 'पुलिस',
    ambulance: 'एम्बुलेंस',
    fireBrigade: 'फायर ब्रिगेड',
    disasterManagement: 'आपदा प्रबंधन',
    womensHelpline: 'महिला हेल्पलाइन',
    childHelpline: 'चाइल्ड हेल्पलाइन',
    call: 'कॉल करें',
    emergencyAssist: 'आपातकालीन सहायता',
    accident: 'दुर्घटना की रिपोर्ट करें',
    accidentDesc: 'यातायात या अन्य घटनाएं',
    medical: 'चिकित्सा सहायता',
    medicalDesc: 'तत्काल चिकित्सा सहायता का अनुरोध करें',
    lostAndFound: 'खोया और पाया',
    lostAndFoundDesc: 'किसी खोए हुए व्यक्ति या वस्तु की रिपोर्ट करें',
    theftHarassment: 'चोरी / उत्पीड़न',
    theftHarassmentDesc: 'किसी भी आपराधिक गतिविधि की रिपोर्ट करें',
    issue: 'अन्य समस्या',
    issueDesc: 'किसी अन्य समस्या की रिपोर्ट करें',
    liveLocationSharing: 'लाइव लोकेशन शेयरिंग',
    currentLocation: 'उज्जैन, महाकाल मंदिर के पास',
    active: 'सक्रिय',
    locationSharingDisabled: 'गोपनीयता के लिए लोकेशन शेयरिंग अक्षम है। आपात स्थिति में अधिकारियों के साथ साझा करने के लिए सक्षम करें।',
    shareLocation: 'मेरा स्थान साझा करें',
    activeAlerts: 'सक्रिय अलर्ट',
    lostPerson: 'खोए हुए व्यक्ति की चेतावनी: बच्चा, 8 साल का',
    team: 'टीम:',
    minsAgo: '{count} मिनट पहले',
    recentAlerts: 'हाल के अलर्ट (हल)',
    medicalEmergency: 'राम घाट के पास चिकित्सा आपातकाल',
    resolved: 'हल किया गया',
    trafficAccident: 'पुल पर यातायात दुर्घटना',
    hoursAgo: '{count} घंटे पहले',
    incidentReport: 'घटना रिपोर्ट',
    yourRole: 'आपकी भूमिका क्या है?',
    visitor: 'आगंतुक',
    visitorDesc: 'सामान्य आगंतुक',
    security: 'सुरक्षा',
    securityDesc: 'सुरक्षा कर्मी',
    volunteer: 'स्वयंसेवक',
    volunteerDesc: 'घटना स्वयंसेवक',
    medicalStaff: 'चिकित्सा कर्मचारी',
    medicalStaffDesc: 'चिकित्सा कर्मचारी',
    vendor: 'विक्रेता',
    vendorDesc: 'विक्रेता/कर्मचारी',
    issueType: 'समस्या का प्रकार',
    priorityLevel: 'प्राथमिकता स्तर',
    reportDetails: 'रिपोर्ट विवरण',
    locationPlaceholder: 'स्थान का वर्णन करें...',
    descriptionPlaceholder: 'घटना का वर्णन करें...',
    chars: 'अक्षर',
    attachPhoto: 'फोटो संलग्न करें (वैकल्पिक)',
    clickToUpload: 'अपलोड करने के लिए क्लिक करें या खींचें और छोड़ें',
    fileTypes: 'SVG, PNG, JPG या GIF',
    submitReport: 'रिपोर्ट सबमिट करें',
    headerSearchPlaceholder: 'स्थानों, सेवाओं की खोज करें...',
    voiceSearch: 'आवाज़ से खोजें',
    toggleNotifications: 'सूचनाएं टॉगल करें',
    closeNotification: 'बंद करें',
    settingsTitle: 'सेटिंग्स',
    generalSettings: 'सामान्य सेटिंग्स',
    theme: 'थीम',
    light: 'लाइट',
    dark: 'डार्क',
    system: 'सिस्टम',
    notificationSettings: 'अधिसूचना सेटिंग्स',
    crowdAlerts: 'भीड़ अलर्ट',
    bookingConfirmations: 'बुकिंग पुष्टिकरण',
    emergencyUpdates: 'आपातकालीन अपडेट',
    accountSettings: 'खाता',
    loggedInAs: 'के रूप में लॉग इन',
    pilgrim: 'तीर्थयात्री',
    editProfile: 'प्रोफ़ाइल संपादित करें',
    changePassword: 'पासवर्ड बदलें',
    aboutTitle: 'उज्जैन360 के बारे में',
    ourMission: 'हमारा लक्ष्य',
    ourMissionDesc: 'उज्जैन सिंहस्थ में आने वाले प्रत्येक तीर्थयात्री को एक सुरक्षित, सहज और आध्यात्मिक रूप से समृद्ध अनुभव प्रदान करना, भक्ति और सुविधा के बीच की खाई को पाटने के लिए प्रौद्योगिकी का उपयोग करना।',
    ourTech: 'हमारी तकनीक',
    ourTechDesc1: 'उज्जैन360 को मापनीयता और वास्तविक समय के प्रदर्शन के लिए डिज़ाइन किए गए एक आधुनिक टेक स्टैक पर बनाया गया है। हम भीड़ प्रबंधन के लिए लाइव डेटा फीड, नेविगेशन के लिए जीपीएस और बुकिंग और रिपोर्ट के लिए एक सुरक्षित बैकएंड का लाभ उठाते हैं।',
    ourTechDesc2: 'हमारी मुख्य विशेषताएं गूगल के जेमिनी एआई द्वारा संचालित हैं जो बुद्धिमान मार्ग सिफारिशें और एक सहायक संवादी सहायक प्रदान करती हैं, यह सुनिश्चित करते हुए कि आपके पास सबसे अच्छी जानकारी आपकी उंगलियों पर हो।',
    theApp: 'ऐप',
    theAppDesc: 'यह एप्लिकेशन सिंहस्थ के लिए आपका ऑल-इन-वन डिजिटल साथी है।',
    keyFeatures: 'मुख्य विशेषताएं',
    featureNav: 'वास्तविक समय नेविगेशन और भीड़ की जानकारी',
    featureBooking: 'परेशानी मुक्त परिवहन और रहने की बुकिंग',
    featureEmergency: 'तत्काल एसओएस और आपातकालीन सेवाएं',
    meetTheTeam: 'टीम से मिलें',
    teamMember1Name: 'आरव शर्मा',
    teamMember1Role: 'परियोजना प्रमुख',
    teamMember2Name: 'प्रिया वर्मा',
    teamMember2Role: 'UX/UI डिजाइनर',
    teamMember3Name: 'रोहन गुप्ता',
    teamMember3Role: 'लीड डेवलपर',
    galleryTitle: 'गैलरी',
    galleryModalTitle: 'छवि पूर्वावलोकन',
    userLogin: 'उपयोगकर्ता लॉगिन',
    adminLogin: 'एडमिन लॉगिन',
    loginPrompt: 'अपने {type} खाते में लॉगिन करें',
    user: 'उपयोगकर्ता',
    emailAddress: 'ईमेल पता',
    password: 'पासवर्ड',
    forgotPassword: 'पासवर्ड भूल गए?',
    login: 'लॉगिन',
    noAccountPrompt: 'खाता नहीं है?',
    signUp: 'साइन अप करें',
    assistantTitle: 'AI सहायक',
    listening: 'सुन रहा है...',
    typeYourMessage: 'अपना संदेश टाइप करें...',
    languageLabel: 'भाषा:',
    aiRecommendedRouteName: 'AI अनुशंसित मार्ग',
    aiRecommendedRouteDesc: '{start} से {end} तक का सबसे सुरक्षित और सबसे सुविधाजनक मार्ग, उच्च-यातायात क्षेत्रों से बचते हुए।',
    shortestPathRouteName: 'सबसे छोटा रास्ता',
    shortestPathRouteDesc: '{start} से {end} तक का सबसे सीधा पैदल मार्ग।',
    saferPathDesc: '{end} तक थोड़ा लंबा लेकिन सुरक्षित मार्ग, संकरे रास्तों से बचते हुए।',
    markerTypeUser: 'आपका स्थान',
    markerTypeTemple: 'मंदिर',
    markerTypeGhat: 'घाट',
    markerTypePolice: 'पुलिस',
    markerTypeAmbulance: 'एम्बुलेंस',
    markerTypeAmenity: 'सुविधा',
    crowdLevelPopup: 'भीड़ का स्तर: {level}',
  },
};

type Language = keyof typeof translations;
export type TranslationKey = keyof typeof translations['en'];

interface I18nContextType {
  language: Language;
  setLanguage: (language: Language) => void;
  t: (key: TranslationKey, replacements?: { [key: string]: string | number }) => string;
}

const I18nContext = createContext<I18nContextType | undefined>(undefined);

export const I18nProvider = ({ children }: { children: ReactNode }) => {
  const [language, setLanguage] = useState<Language>('en');

  const t = (key: TranslationKey, replacements?: { [key: string]: string | number }) => {
    let translation = translations[language]?.[key] || translations['en'][key];
    if (replacements) {
        Object.entries(replacements).forEach(([key, value]) => {
            translation = translation.replace(`{${key}}`, String(value));
        });
    }
    return translation;
  };

  // FIX: Replaced JSX with React.createElement to make it compatible with a .ts file extension.
  // The original JSX syntax was causing parsing errors because the file is not a .tsx file.
  return React.createElement(I18nContext.Provider, { value: { language, setLanguage, t } }, children);
};

export const useI18n = (): I18nContextType => {
  const context = useContext(I18nContext);
  if (context === undefined) {
    throw new Error('useI18n must be used within an I18nProvider');
  }
  return context;
};